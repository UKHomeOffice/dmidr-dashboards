apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-proxy-config
data:
  default.conf: |-
    location / {
      access_by_lua_block {
        -- load lua functions ("authenticate" is the name of the file containing the authentication function)
        local lua_auth_module = require('authenticate')
        -- authenticate user ("authenticate_user" is the name of the function in the image that will authenticate the user)
        local response = lua_auth_module.authenticate_user()
    
        -- only allow users who have the "users" role access to this endpoint
        -- the information from "response.user" comes from the userinfo endpoint, we're looking at the "roles" field from that endpoint
        -- note: "contains" is a function built into the image that will check if a given Lua table (a list/array) contains a given value
        if lua_auth_module.contains(response.user.roles, "users") ~= true then
          -- if the user does not have the required role, show them a 403 with an access forbidden error message
          -- note: "reject_as_forbidden" is another function that is built into the image
          lua_auth_module.reject_as_forbidden()
        end
      }
    
      # if the user has been authenticated and has the required role, send them to the upstream application
      proxy_pass $proxy_upstream;
    }
